//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DSA.Subscription.Service.DuplexService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalPatient", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities")]
    [System.SerializableAttribute()]
    public partial class LocalPatient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalIntervention> InterventionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalIntervention> Interventions {
            get {
                return this.InterventionsField;
            }
            set {
                if ((object.ReferenceEquals(this.InterventionsField, value) != true)) {
                    this.InterventionsField = value;
                    this.RaisePropertyChanged("Interventions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalIntervention", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities")]
    [System.SerializableAttribute()]
    public partial class LocalIntervention : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DSA.Subscription.Service.DuplexService.LocalArea AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DSA.Subscription.Service.DuplexService.LocalDateHourDetail DateHourDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DSA.Subscription.Service.DuplexService.LocalLocation LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DSA.Subscription.Service.DuplexService.LocalWork LucrareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DSA.Subscription.Service.DuplexService.LocalMaterial MaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObservationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DSA.Subscription.Service.DuplexService.LocalRevenue RevenueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DSA.Subscription.Service.DuplexService.LocalArea Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DSA.Subscription.Service.DuplexService.LocalDateHourDetail DateHourDetail {
            get {
                return this.DateHourDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.DateHourDetailField, value) != true)) {
                    this.DateHourDetailField = value;
                    this.RaisePropertyChanged("DateHourDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DSA.Subscription.Service.DuplexService.LocalLocation Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DSA.Subscription.Service.DuplexService.LocalWork Lucrare {
            get {
                return this.LucrareField;
            }
            set {
                if ((object.ReferenceEquals(this.LucrareField, value) != true)) {
                    this.LucrareField = value;
                    this.RaisePropertyChanged("Lucrare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DSA.Subscription.Service.DuplexService.LocalMaterial Material {
            get {
                return this.MaterialField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialField, value) != true)) {
                    this.MaterialField = value;
                    this.RaisePropertyChanged("Material");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Observation {
            get {
                return this.ObservationField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservationField, value) != true)) {
                    this.ObservationField = value;
                    this.RaisePropertyChanged("Observation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DSA.Subscription.Service.DuplexService.LocalRevenue Revenue {
            get {
                return this.RevenueField;
            }
            set {
                if ((object.ReferenceEquals(this.RevenueField, value) != true)) {
                    this.RevenueField = value;
                    this.RaisePropertyChanged("Revenue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalArea", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities.SettingsEntit" +
        "ies")]
    [System.SerializableAttribute()]
    public partial class LocalArea : DSA.Subscription.Service.DuplexService.SettingsItem {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalDateHourDetail", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities")]
    [System.SerializableAttribute()]
    public partial class LocalDateHourDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndingHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartHourField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndingHour {
            get {
                return this.EndingHourField;
            }
            set {
                if ((this.EndingHourField.Equals(value) != true)) {
                    this.EndingHourField = value;
                    this.RaisePropertyChanged("EndingHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartHour {
            get {
                return this.StartHourField;
            }
            set {
                if ((this.StartHourField.Equals(value) != true)) {
                    this.StartHourField = value;
                    this.RaisePropertyChanged("StartHour");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalLocation", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities.SettingsEntit" +
        "ies")]
    [System.SerializableAttribute()]
    public partial class LocalLocation : DSA.Subscription.Service.DuplexService.SettingsItem {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalWork", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities.SettingsEntit" +
        "ies")]
    [System.SerializableAttribute()]
    public partial class LocalWork : DSA.Subscription.Service.DuplexService.SettingsItem {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalMaterial", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities.SettingsEntit" +
        "ies")]
    [System.SerializableAttribute()]
    public partial class LocalMaterial : DSA.Subscription.Service.DuplexService.SettingsItem {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalRevenue", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities")]
    [System.SerializableAttribute()]
    public partial class LocalRevenue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingsItem", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities.SettingsEntit" +
        "ies")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DSA.Subscription.Service.DuplexService.LocalLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DSA.Subscription.Service.DuplexService.LocalWork))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DSA.Subscription.Service.DuplexService.LocalMaterial))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DSA.Subscription.Service.DuplexService.LocalArea))]
    public partial class SettingsItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalAppointment", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities")]
    [System.SerializableAttribute()]
    public partial class LocalAppointment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeekNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateHour {
            get {
                return this.DateHourField;
            }
            set {
                if ((this.DateHourField.Equals(value) != true)) {
                    this.DateHourField = value;
                    this.RaisePropertyChanged("DateHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeekNumber {
            get {
                return this.WeekNumberField;
            }
            set {
                if ((this.WeekNumberField.Equals(value) != true)) {
                    this.WeekNumberField = value;
                    this.RaisePropertyChanged("WeekNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalWeek", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities")]
    [System.SerializableAttribute()]
    public partial class LocalWeek : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalDay> DaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeekNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalDay> Days {
            get {
                return this.DaysField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysField, value) != true)) {
                    this.DaysField = value;
                    this.RaisePropertyChanged("Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WeekNumber {
            get {
                return this.WeekNumberField;
            }
            set {
                if ((this.WeekNumberField.Equals(value) != true)) {
                    this.WeekNumberField = value;
                    this.RaisePropertyChanged("WeekNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalDay", Namespace="http://schemas.datacontract.org/2004/07/DSA.Database.Model.Entities")]
    [System.SerializableAttribute()]
    public partial class LocalDay : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalAppointment> AppointmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalAppointment> Appointments {
            get {
                return this.AppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AppointmentsField, value) != true)) {
                    this.AppointmentsField = value;
                    this.RaisePropertyChanged("Appointments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DuplexService.IDuplexService", CallbackContract=typeof(DSA.Subscription.Service.DuplexService.IDuplexServiceCallback))]
    public interface IDuplexService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetData", ReplyAction="http://tempuri.org/IDuplexService/GetDataResponse")]
        System.Collections.Generic.List<string> GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetData", ReplyAction="http://tempuri.org/IDuplexService/GetDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/Subscribe", ReplyAction="http://tempuri.org/IDuplexService/SubscribeResponse")]
        System.Guid Subscribe(string machineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/Subscribe", ReplyAction="http://tempuri.org/IDuplexService/SubscribeResponse")]
        System.Threading.Tasks.Task<System.Guid> SubscribeAsync(string machineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/Unsubscribe", ReplyAction="http://tempuri.org/IDuplexService/UnsubscribeResponse")]
        bool Unsubscribe(System.Guid clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/Unsubscribe", ReplyAction="http://tempuri.org/IDuplexService/UnsubscribeResponse")]
        System.Threading.Tasks.Task<bool> UnsubscribeAsync(System.Guid clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetLocalPatients", ReplyAction="http://tempuri.org/IDuplexService/GetLocalPatientsResponse")]
        System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalPatient> GetLocalPatients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetLocalPatients", ReplyAction="http://tempuri.org/IDuplexService/GetLocalPatientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalPatient>> GetLocalPatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/AddPatient", ReplyAction="http://tempuri.org/IDuplexService/AddPatientResponse")]
        int AddPatient(DSA.Subscription.Service.DuplexService.LocalPatient localPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/AddPatient", ReplyAction="http://tempuri.org/IDuplexService/AddPatientResponse")]
        System.Threading.Tasks.Task<int> AddPatientAsync(DSA.Subscription.Service.DuplexService.LocalPatient localPatient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/AddAppointmet", ReplyAction="http://tempuri.org/IDuplexService/AddAppointmetResponse")]
        int AddAppointmet(DSA.Subscription.Service.DuplexService.LocalAppointment localAppointment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/AddAppointmet", ReplyAction="http://tempuri.org/IDuplexService/AddAppointmetResponse")]
        System.Threading.Tasks.Task<int> AddAppointmetAsync(DSA.Subscription.Service.DuplexService.LocalAppointment localAppointment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetWeeks", ReplyAction="http://tempuri.org/IDuplexService/GetWeeksResponse")]
        System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalWeek> GetWeeks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetWeeks", ReplyAction="http://tempuri.org/IDuplexService/GetWeeksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalWeek>> GetWeeksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetAreas", ReplyAction="http://tempuri.org/IDuplexService/GetAreasResponse")]
        System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalArea> GetAreas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetAreas", ReplyAction="http://tempuri.org/IDuplexService/GetAreasResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalArea>> GetAreasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetWorks", ReplyAction="http://tempuri.org/IDuplexService/GetWorksResponse")]
        System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalWork> GetWorks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetWorks", ReplyAction="http://tempuri.org/IDuplexService/GetWorksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalWork>> GetWorksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetMaterials", ReplyAction="http://tempuri.org/IDuplexService/GetMaterialsResponse")]
        System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalMaterial> GetMaterials();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetMaterials", ReplyAction="http://tempuri.org/IDuplexService/GetMaterialsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalMaterial>> GetMaterialsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetLocations", ReplyAction="http://tempuri.org/IDuplexService/GetLocationsResponse")]
        System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalLocation> GetLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDuplexService/GetLocations", ReplyAction="http://tempuri.org/IDuplexService/GetLocationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalLocation>> GetLocationsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDuplexServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDuplexService/TestCallback")]
        void TestCallback(System.Collections.Generic.List<string> testString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDuplexServiceChannel : DSA.Subscription.Service.DuplexService.IDuplexService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DuplexServiceClient : System.ServiceModel.DuplexClientBase<DSA.Subscription.Service.DuplexService.IDuplexService>, DSA.Subscription.Service.DuplexService.IDuplexService {
        
        public DuplexServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DuplexServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DuplexServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DuplexServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DuplexServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<string> GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
        
        public System.Guid Subscribe(string machineName) {
            return base.Channel.Subscribe(machineName);
        }
        
        public System.Threading.Tasks.Task<System.Guid> SubscribeAsync(string machineName) {
            return base.Channel.SubscribeAsync(machineName);
        }
        
        public bool Unsubscribe(System.Guid clientID) {
            return base.Channel.Unsubscribe(clientID);
        }
        
        public System.Threading.Tasks.Task<bool> UnsubscribeAsync(System.Guid clientID) {
            return base.Channel.UnsubscribeAsync(clientID);
        }
        
        public System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalPatient> GetLocalPatients() {
            return base.Channel.GetLocalPatients();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalPatient>> GetLocalPatientsAsync() {
            return base.Channel.GetLocalPatientsAsync();
        }
        
        public int AddPatient(DSA.Subscription.Service.DuplexService.LocalPatient localPatient) {
            return base.Channel.AddPatient(localPatient);
        }
        
        public System.Threading.Tasks.Task<int> AddPatientAsync(DSA.Subscription.Service.DuplexService.LocalPatient localPatient) {
            return base.Channel.AddPatientAsync(localPatient);
        }
        
        public int AddAppointmet(DSA.Subscription.Service.DuplexService.LocalAppointment localAppointment) {
            return base.Channel.AddAppointmet(localAppointment);
        }
        
        public System.Threading.Tasks.Task<int> AddAppointmetAsync(DSA.Subscription.Service.DuplexService.LocalAppointment localAppointment) {
            return base.Channel.AddAppointmetAsync(localAppointment);
        }
        
        public System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalWeek> GetWeeks() {
            return base.Channel.GetWeeks();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalWeek>> GetWeeksAsync() {
            return base.Channel.GetWeeksAsync();
        }
        
        public System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalArea> GetAreas() {
            return base.Channel.GetAreas();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalArea>> GetAreasAsync() {
            return base.Channel.GetAreasAsync();
        }
        
        public System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalWork> GetWorks() {
            return base.Channel.GetWorks();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalWork>> GetWorksAsync() {
            return base.Channel.GetWorksAsync();
        }
        
        public System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalMaterial> GetMaterials() {
            return base.Channel.GetMaterials();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalMaterial>> GetMaterialsAsync() {
            return base.Channel.GetMaterialsAsync();
        }
        
        public System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalLocation> GetLocations() {
            return base.Channel.GetLocations();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<DSA.Subscription.Service.DuplexService.LocalLocation>> GetLocationsAsync() {
            return base.Channel.GetLocationsAsync();
        }
    }
}
