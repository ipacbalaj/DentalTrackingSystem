//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("dsaModel", "FK_AreaIntervention", "Area", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSA.Database.Model.EfSQlLite.Area), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "FK_InterventionDateHourDetails", "DateHourDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSA.Database.Model.EfSQlLite.DateHourDetail), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "FK_FilterGroupFilter", "FilterGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSA.Database.Model.EfSQlLite.FilterGroup), "Filter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Filter), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "FK_FilterFilterType", "FilterType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSA.Database.Model.EfSQlLite.FilterType), "Filter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Filter), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "FK_InterventionLocation", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSA.Database.Model.EfSQlLite.Location), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "FK_InterventionWork", "Work", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSA.Database.Model.EfSQlLite.Work), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "FK_MaterialIntervention", "Material", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSA.Database.Model.EfSQlLite.Material), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "FK_MonthIntervention", "Month", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSA.Database.Model.EfSQlLite.Month), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "FK_PatientIntervention", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSA.Database.Model.EfSQlLite.Patient), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "FK_YearIntervention", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSA.Database.Model.EfSQlLite.Year), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "FilterFilterItem", "Filter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Filter), "FilterItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.FilterItem))]
[assembly: EdmRelationshipAttribute("dsaModel", "MaterialType", "Material", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSA.Database.Model.EfSQlLite.Material), "Type", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Type))]
[assembly: EdmRelationshipAttribute("dsaModel", "TypeIntervention", "Type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSA.Database.Model.EfSQlLite.Type), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention))]
[assembly: EdmRelationshipAttribute("dsaModel", "UserMAC", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSA.Database.Model.EfSQlLite.User), "MAC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.MAC))]
[assembly: EdmRelationshipAttribute("dsaModel", "WorkWorkType", "Work", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSA.Database.Model.EfSQlLite.Work), "WorkType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.WorkType))]
[assembly: EdmRelationshipAttribute("dsaModel", "WorkTypeIntervention", "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), "WorkType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSA.Database.Model.EfSQlLite.WorkType))]
[assembly: EdmRelationshipAttribute("dsaModel", "TechnicianIntervention", "Technician", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DSA.Database.Model.EfSQlLite.Technician), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "UserPatient", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSA.Database.Model.EfSQlLite.User), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Patient), true)]
[assembly: EdmRelationshipAttribute("dsaModel", "UserIntervention", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DSA.Database.Model.EfSQlLite.User), "Intervention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DSA.Database.Model.EfSQlLite.Intervention), true)]

#endregion

namespace DSA.Database.Model.EfSQlLite
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class dsaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new dsaEntities object using the connection string found in the 'dsaEntities' section of the application configuration file.
        /// </summary>
        public dsaEntities() : base("name=dsaEntities", "dsaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new dsaEntities object.
        /// </summary>
        public dsaEntities(string connectionString) : base(connectionString, "dsaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new dsaEntities object.
        /// </summary>
        public dsaEntities(EntityConnection connection) : base(connection, "dsaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Area> Areas
        {
            get
            {
                if ((_Areas == null))
                {
                    _Areas = base.CreateObjectSet<Area>("Areas");
                }
                return _Areas;
            }
        }
        private ObjectSet<Area> _Areas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DateHourDetail> DateHourDetails
        {
            get
            {
                if ((_DateHourDetails == null))
                {
                    _DateHourDetails = base.CreateObjectSet<DateHourDetail>("DateHourDetails");
                }
                return _DateHourDetails;
            }
        }
        private ObjectSet<DateHourDetail> _DateHourDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FilterGroup> FilterGroups
        {
            get
            {
                if ((_FilterGroups == null))
                {
                    _FilterGroups = base.CreateObjectSet<FilterGroup>("FilterGroups");
                }
                return _FilterGroups;
            }
        }
        private ObjectSet<FilterGroup> _FilterGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FilterItem> FilterItems
        {
            get
            {
                if ((_FilterItems == null))
                {
                    _FilterItems = base.CreateObjectSet<FilterItem>("FilterItems");
                }
                return _FilterItems;
            }
        }
        private ObjectSet<FilterItem> _FilterItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Filter> Filters
        {
            get
            {
                if ((_Filters == null))
                {
                    _Filters = base.CreateObjectSet<Filter>("Filters");
                }
                return _Filters;
            }
        }
        private ObjectSet<Filter> _Filters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FilterType> FilterTypes
        {
            get
            {
                if ((_FilterTypes == null))
                {
                    _FilterTypes = base.CreateObjectSet<FilterType>("FilterTypes");
                }
                return _FilterTypes;
            }
        }
        private ObjectSet<FilterType> _FilterTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Intervention> Interventions
        {
            get
            {
                if ((_Interventions == null))
                {
                    _Interventions = base.CreateObjectSet<Intervention>("Interventions");
                }
                return _Interventions;
            }
        }
        private ObjectSet<Intervention> _Interventions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Material> Materials
        {
            get
            {
                if ((_Materials == null))
                {
                    _Materials = base.CreateObjectSet<Material>("Materials");
                }
                return _Materials;
            }
        }
        private ObjectSet<Material> _Materials;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Month> Months
        {
            get
            {
                if ((_Months == null))
                {
                    _Months = base.CreateObjectSet<Month>("Months");
                }
                return _Months;
            }
        }
        private ObjectSet<Month> _Months;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Work> Works
        {
            get
            {
                if ((_Works == null))
                {
                    _Works = base.CreateObjectSet<Work>("Works");
                }
                return _Works;
            }
        }
        private ObjectSet<Work> _Works;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Year> Years
        {
            get
            {
                if ((_Years == null))
                {
                    _Years = base.CreateObjectSet<Year>("Years");
                }
                return _Years;
            }
        }
        private ObjectSet<Year> _Years;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Technician> Technicians
        {
            get
            {
                if ((_Technicians == null))
                {
                    _Technicians = base.CreateObjectSet<Technician>("Technicians");
                }
                return _Technicians;
            }
        }
        private ObjectSet<Technician> _Technicians;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Type> Types
        {
            get
            {
                if ((_Types == null))
                {
                    _Types = base.CreateObjectSet<Type>("Types");
                }
                return _Types;
            }
        }
        private ObjectSet<Type> _Types;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DentalPaymentInfo> DentalPaymentInfoes
        {
            get
            {
                if ((_DentalPaymentInfoes == null))
                {
                    _DentalPaymentInfoes = base.CreateObjectSet<DentalPaymentInfo>("DentalPaymentInfoes");
                }
                return _DentalPaymentInfoes;
            }
        }
        private ObjectSet<DentalPaymentInfo> _DentalPaymentInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IntervalInfo> IntervalInfoes
        {
            get
            {
                if ((_IntervalInfoes == null))
                {
                    _IntervalInfoes = base.CreateObjectSet<IntervalInfo>("IntervalInfoes");
                }
                return _IntervalInfoes;
            }
        }
        private ObjectSet<IntervalInfo> _IntervalInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MAC> MACs
        {
            get
            {
                if ((_MACs == null))
                {
                    _MACs = base.CreateObjectSet<MAC>("MACs");
                }
                return _MACs;
            }
        }
        private ObjectSet<MAC> _MACs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkType> WorkTypes
        {
            get
            {
                if ((_WorkTypes == null))
                {
                    _WorkTypes = base.CreateObjectSet<WorkType>("WorkTypes");
                }
                return _WorkTypes;
            }
        }
        private ObjectSet<WorkType> _WorkTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProgramInfo> ProgramInfoes
        {
            get
            {
                if ((_ProgramInfoes == null))
                {
                    _ProgramInfoes = base.CreateObjectSet<ProgramInfo>("ProgramInfoes");
                }
                return _ProgramInfoes;
            }
        }
        private ObjectSet<ProgramInfo> _ProgramInfoes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Areas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAreas(Area area)
        {
            base.AddObject("Areas", area);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DateHourDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDateHourDetails(DateHourDetail dateHourDetail)
        {
            base.AddObject("DateHourDetails", dateHourDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FilterGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilterGroups(FilterGroup filterGroup)
        {
            base.AddObject("FilterGroups", filterGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FilterItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilterItems(FilterItem filterItem)
        {
            base.AddObject("FilterItems", filterItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Filters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilters(Filter filter)
        {
            base.AddObject("Filters", filter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FilterTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilterTypes(FilterType filterType)
        {
            base.AddObject("FilterTypes", filterType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Interventions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInterventions(Intervention intervention)
        {
            base.AddObject("Interventions", intervention);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Materials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterials(Material material)
        {
            base.AddObject("Materials", material);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Months EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonths(Month month)
        {
            base.AddObject("Months", month);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Works EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorks(Work work)
        {
            base.AddObject("Works", work);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Years EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToYears(Year year)
        {
            base.AddObject("Years", year);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Technicians EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTechnicians(Technician technician)
        {
            base.AddObject("Technicians", technician);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Types EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypes(Type type)
        {
            base.AddObject("Types", type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DentalPaymentInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDentalPaymentInfoes(DentalPaymentInfo dentalPaymentInfo)
        {
            base.AddObject("DentalPaymentInfoes", dentalPaymentInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IntervalInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIntervalInfoes(IntervalInfo intervalInfo)
        {
            base.AddObject("IntervalInfoes", intervalInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MACs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMACs(MAC mAC)
        {
            base.AddObject("MACs", mAC);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkTypes(WorkType workType)
        {
            base.AddObject("WorkTypes", workType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProgramInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProgramInfoes(ProgramInfo programInfo)
        {
            base.AddObject("ProgramInfoes", programInfo);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Area")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Area : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Area object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Area CreateArea(global::System.Int32 id, global::System.String name)
        {
            Area area = new Area();
            area.Id = id;
            area.Name = name;
            return area;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasDeleted
        {
            get
            {
                return _WasDeleted;
            }
            set
            {
                OnWasDeletedChanging(value);
                ReportPropertyChanging("WasDeleted");
                _WasDeleted = StructuralObject.SetValidValue(value, "WasDeleted");
                ReportPropertyChanged("WasDeleted");
                OnWasDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasDeleted;
        partial void OnWasDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnWasDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_AreaIntervention", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.FK_AreaIntervention", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.FK_AreaIntervention", "Intervention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="DateHourDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DateHourDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DateHourDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="startHour">Initial value of the StartHour property.</param>
        /// <param name="endingHour">Initial value of the EndingHour property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="miliTime">Initial value of the MiliTime property.</param>
        public static DateHourDetail CreateDateHourDetail(global::System.Int32 id, global::System.DateTime startHour, global::System.DateTime endingHour, global::System.DateTime date, global::System.Int64 miliTime)
        {
            DateHourDetail dateHourDetail = new DateHourDetail();
            dateHourDetail.Id = id;
            dateHourDetail.StartHour = startHour;
            dateHourDetail.EndingHour = endingHour;
            dateHourDetail.Date = date;
            dateHourDetail.MiliTime = miliTime;
            return dateHourDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartHour
        {
            get
            {
                return _StartHour;
            }
            set
            {
                OnStartHourChanging(value);
                ReportPropertyChanging("StartHour");
                _StartHour = StructuralObject.SetValidValue(value, "StartHour");
                ReportPropertyChanged("StartHour");
                OnStartHourChanged();
            }
        }
        private global::System.DateTime _StartHour;
        partial void OnStartHourChanging(global::System.DateTime value);
        partial void OnStartHourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndingHour
        {
            get
            {
                return _EndingHour;
            }
            set
            {
                OnEndingHourChanging(value);
                ReportPropertyChanging("EndingHour");
                _EndingHour = StructuralObject.SetValidValue(value, "EndingHour");
                ReportPropertyChanged("EndingHour");
                OnEndingHourChanged();
            }
        }
        private global::System.DateTime _EndingHour;
        partial void OnEndingHourChanging(global::System.DateTime value);
        partial void OnEndingHourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value, "Duration");
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int64> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int64> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MiliTime
        {
            get
            {
                return _MiliTime;
            }
            set
            {
                OnMiliTimeChanging(value);
                ReportPropertyChanging("MiliTime");
                _MiliTime = StructuralObject.SetValidValue(value, "MiliTime");
                ReportPropertyChanged("MiliTime");
                OnMiliTimeChanged();
            }
        }
        private global::System.Int64 _MiliTime;
        partial void OnMiliTimeChanging(global::System.Int64 value);
        partial void OnMiliTimeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_InterventionDateHourDetails", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.FK_InterventionDateHourDetails", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.FK_InterventionDateHourDetails", "Intervention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="DentalPaymentInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DentalPaymentInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DentalPaymentInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="totalRevenue">Initial value of the TotalRevenue property.</param>
        /// <param name="totalPercent">Initial value of the TotalPercent property.</param>
        public static DentalPaymentInfo CreateDentalPaymentInfo(global::System.Int32 id, global::System.String name, global::System.DateTime date, global::System.Double totalRevenue, global::System.Double totalPercent)
        {
            DentalPaymentInfo dentalPaymentInfo = new DentalPaymentInfo();
            dentalPaymentInfo.Id = id;
            dentalPaymentInfo.Name = name;
            dentalPaymentInfo.Date = date;
            dentalPaymentInfo.TotalRevenue = totalRevenue;
            dentalPaymentInfo.TotalPercent = totalPercent;
            return dentalPaymentInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalRevenue
        {
            get
            {
                return _TotalRevenue;
            }
            set
            {
                OnTotalRevenueChanging(value);
                ReportPropertyChanging("TotalRevenue");
                _TotalRevenue = StructuralObject.SetValidValue(value, "TotalRevenue");
                ReportPropertyChanged("TotalRevenue");
                OnTotalRevenueChanged();
            }
        }
        private global::System.Double _TotalRevenue;
        partial void OnTotalRevenueChanging(global::System.Double value);
        partial void OnTotalRevenueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalPercent
        {
            get
            {
                return _TotalPercent;
            }
            set
            {
                OnTotalPercentChanging(value);
                ReportPropertyChanging("TotalPercent");
                _TotalPercent = StructuralObject.SetValidValue(value, "TotalPercent");
                ReportPropertyChanged("TotalPercent");
                OnTotalPercentChanged();
            }
        }
        private global::System.Double _TotalPercent;
        partial void OnTotalPercentChanging(global::System.Double value);
        partial void OnTotalPercentChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Filter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Filter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Filter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="filterGroup_Id">Initial value of the FilterGroup_Id property.</param>
        /// <param name="filterType_Id">Initial value of the FilterType_Id property.</param>
        public static Filter CreateFilter(global::System.Int32 id, global::System.Boolean isActive, global::System.Int32 filterGroup_Id, global::System.Int32 filterType_Id)
        {
            Filter filter = new Filter();
            filter.Id = id;
            filter.IsActive = isActive;
            filter.FilterGroup_Id = filterGroup_Id;
            filter.FilterType_Id = filterType_Id;
            return filter;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilterGroup_Id
        {
            get
            {
                return _FilterGroup_Id;
            }
            set
            {
                OnFilterGroup_IdChanging(value);
                ReportPropertyChanging("FilterGroup_Id");
                _FilterGroup_Id = StructuralObject.SetValidValue(value, "FilterGroup_Id");
                ReportPropertyChanged("FilterGroup_Id");
                OnFilterGroup_IdChanged();
            }
        }
        private global::System.Int32 _FilterGroup_Id;
        partial void OnFilterGroup_IdChanging(global::System.Int32 value);
        partial void OnFilterGroup_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilterType_Id
        {
            get
            {
                return _FilterType_Id;
            }
            set
            {
                OnFilterType_IdChanging(value);
                ReportPropertyChanging("FilterType_Id");
                _FilterType_Id = StructuralObject.SetValidValue(value, "FilterType_Id");
                ReportPropertyChanged("FilterType_Id");
                OnFilterType_IdChanged();
            }
        }
        private global::System.Int32 _FilterType_Id;
        partial void OnFilterType_IdChanging(global::System.Int32 value);
        partial void OnFilterType_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_FilterGroupFilter", "FilterGroup")]
        public FilterGroup FilterGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterGroup>("dsaModel.FK_FilterGroupFilter", "FilterGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterGroup>("dsaModel.FK_FilterGroupFilter", "FilterGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilterGroup> FilterGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterGroup>("dsaModel.FK_FilterGroupFilter", "FilterGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilterGroup>("dsaModel.FK_FilterGroupFilter", "FilterGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_FilterFilterType", "FilterType")]
        public FilterType FilterType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterType>("dsaModel.FK_FilterFilterType", "FilterType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterType>("dsaModel.FK_FilterFilterType", "FilterType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilterType> FilterTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterType>("dsaModel.FK_FilterFilterType", "FilterType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilterType>("dsaModel.FK_FilterFilterType", "FilterType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FilterFilterItem", "FilterItem")]
        public EntityCollection<FilterItem> FilterItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FilterItem>("dsaModel.FilterFilterItem", "FilterItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FilterItem>("dsaModel.FilterFilterItem", "FilterItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="FilterGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilterGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FilterGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isIntervalActive">Initial value of the IsIntervalActive property.</param>
        public static FilterGroup CreateFilterGroup(global::System.Int32 id, global::System.String name, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Boolean isActive, global::System.Boolean isIntervalActive)
        {
            FilterGroup filterGroup = new FilterGroup();
            filterGroup.Id = id;
            filterGroup.Name = name;
            filterGroup.StartDate = startDate;
            filterGroup.EndDate = endDate;
            filterGroup.IsActive = isActive;
            filterGroup.IsIntervalActive = isIntervalActive;
            return filterGroup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIntervalActive
        {
            get
            {
                return _IsIntervalActive;
            }
            set
            {
                OnIsIntervalActiveChanging(value);
                ReportPropertyChanging("IsIntervalActive");
                _IsIntervalActive = StructuralObject.SetValidValue(value, "IsIntervalActive");
                ReportPropertyChanged("IsIntervalActive");
                OnIsIntervalActiveChanged();
            }
        }
        private global::System.Boolean _IsIntervalActive;
        partial void OnIsIntervalActiveChanging(global::System.Boolean value);
        partial void OnIsIntervalActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_FilterGroupFilter", "Filter")]
        public EntityCollection<Filter> Filters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Filter>("dsaModel.FK_FilterGroupFilter", "Filter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Filter>("dsaModel.FK_FilterGroupFilter", "Filter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="FilterItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilterItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FilterItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FilterItem CreateFilterItem(global::System.Int32 id, global::System.String name)
        {
            FilterItem filterItem = new FilterItem();
            filterItem.Id = id;
            filterItem.Name = name;
            return filterItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FilterFilterItem", "Filter")]
        public EntityCollection<Filter> Filters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Filter>("dsaModel.FilterFilterItem", "Filter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Filter>("dsaModel.FilterFilterItem", "Filter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="FilterType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilterType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FilterType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FilterType CreateFilterType(global::System.Int32 id, global::System.String name)
        {
            FilterType filterType = new FilterType();
            filterType.Id = id;
            filterType.Name = name;
            return filterType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_FilterFilterType", "Filter")]
        public EntityCollection<Filter> Filters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Filter>("dsaModel.FK_FilterFilterType", "Filter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Filter>("dsaModel.FK_FilterFilterType", "Filter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="IntervalInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IntervalInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IntervalInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="totalRevenue">Initial value of the TotalRevenue property.</param>
        /// <param name="totalPercent">Initial value of the TotalPercent property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static IntervalInfo CreateIntervalInfo(global::System.Int32 id, global::System.Double totalRevenue, global::System.Double totalPercent, global::System.String name)
        {
            IntervalInfo intervalInfo = new IntervalInfo();
            intervalInfo.Id = id;
            intervalInfo.TotalRevenue = totalRevenue;
            intervalInfo.TotalPercent = totalPercent;
            intervalInfo.Name = name;
            return intervalInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalRevenue
        {
            get
            {
                return _TotalRevenue;
            }
            set
            {
                OnTotalRevenueChanging(value);
                ReportPropertyChanging("TotalRevenue");
                _TotalRevenue = StructuralObject.SetValidValue(value, "TotalRevenue");
                ReportPropertyChanged("TotalRevenue");
                OnTotalRevenueChanged();
            }
        }
        private global::System.Double _TotalRevenue;
        partial void OnTotalRevenueChanging(global::System.Double value);
        partial void OnTotalRevenueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalPercent
        {
            get
            {
                return _TotalPercent;
            }
            set
            {
                OnTotalPercentChanging(value);
                ReportPropertyChanging("TotalPercent");
                _TotalPercent = StructuralObject.SetValidValue(value, "TotalPercent");
                ReportPropertyChanged("TotalPercent");
                OnTotalPercentChanged();
            }
        }
        private global::System.Double _TotalPercent;
        partial void OnTotalPercentChanging(global::System.Double value);
        partial void OnTotalPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Intervention")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Intervention : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Intervention object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="revenue">Initial value of the Revenue property.</param>
        /// <param name="percent">Initial value of the Percent property.</param>
        /// <param name="patient_id">Initial value of the Patient_id property.</param>
        /// <param name="dateHourDetail_Id">Initial value of the DateHourDetail_Id property.</param>
        /// <param name="year_Id">Initial value of the Year_Id property.</param>
        /// <param name="month_Id">Initial value of the Month_Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Intervention CreateIntervention(global::System.Int32 id, global::System.Int32 number, global::System.Double revenue, global::System.Double percent, global::System.Int32 patient_id, global::System.Int32 dateHourDetail_Id, global::System.Int32 year_Id, global::System.Int32 month_Id, global::System.Int32 userId)
        {
            Intervention intervention = new Intervention();
            intervention.Id = id;
            intervention.Number = number;
            intervention.Revenue = revenue;
            intervention.Percent = percent;
            intervention.Patient_id = patient_id;
            intervention.DateHourDetail_Id = dateHourDetail_Id;
            intervention.Year_Id = year_Id;
            intervention.Month_Id = month_Id;
            intervention.UserId = userId;
            return intervention;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observation
        {
            get
            {
                return _Observation;
            }
            set
            {
                OnObservationChanging(value);
                ReportPropertyChanging("Observation");
                _Observation = StructuralObject.SetValidValue(value, true, "Observation");
                ReportPropertyChanged("Observation");
                OnObservationChanged();
            }
        }
        private global::System.String _Observation;
        partial void OnObservationChanging(global::System.String value);
        partial void OnObservationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Revenue
        {
            get
            {
                return _Revenue;
            }
            set
            {
                OnRevenueChanging(value);
                ReportPropertyChanging("Revenue");
                _Revenue = StructuralObject.SetValidValue(value, "Revenue");
                ReportPropertyChanged("Revenue");
                OnRevenueChanged();
            }
        }
        private global::System.Double _Revenue;
        partial void OnRevenueChanging(global::System.Double value);
        partial void OnRevenueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Percent
        {
            get
            {
                return _Percent;
            }
            set
            {
                OnPercentChanging(value);
                ReportPropertyChanging("Percent");
                _Percent = StructuralObject.SetValidValue(value, "Percent");
                ReportPropertyChanged("Percent");
                OnPercentChanged();
            }
        }
        private global::System.Double _Percent;
        partial void OnPercentChanging(global::System.Double value);
        partial void OnPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Patient_id
        {
            get
            {
                return _Patient_id;
            }
            set
            {
                OnPatient_idChanging(value);
                ReportPropertyChanging("Patient_id");
                _Patient_id = StructuralObject.SetValidValue(value, "Patient_id");
                ReportPropertyChanged("Patient_id");
                OnPatient_idChanged();
            }
        }
        private global::System.Int32 _Patient_id;
        partial void OnPatient_idChanging(global::System.Int32 value);
        partial void OnPatient_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Location_Id
        {
            get
            {
                return _Location_Id;
            }
            set
            {
                OnLocation_IdChanging(value);
                ReportPropertyChanging("Location_Id");
                _Location_Id = StructuralObject.SetValidValue(value, "Location_Id");
                ReportPropertyChanged("Location_Id");
                OnLocation_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Location_Id;
        partial void OnLocation_IdChanging(Nullable<global::System.Int32> value);
        partial void OnLocation_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Material_Id
        {
            get
            {
                return _Material_Id;
            }
            set
            {
                OnMaterial_IdChanging(value);
                ReportPropertyChanging("Material_Id");
                _Material_Id = StructuralObject.SetValidValue(value, "Material_Id");
                ReportPropertyChanged("Material_Id");
                OnMaterial_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Material_Id;
        partial void OnMaterial_IdChanging(Nullable<global::System.Int32> value);
        partial void OnMaterial_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DateHourDetail_Id
        {
            get
            {
                return _DateHourDetail_Id;
            }
            set
            {
                OnDateHourDetail_IdChanging(value);
                ReportPropertyChanging("DateHourDetail_Id");
                _DateHourDetail_Id = StructuralObject.SetValidValue(value, "DateHourDetail_Id");
                ReportPropertyChanged("DateHourDetail_Id");
                OnDateHourDetail_IdChanged();
            }
        }
        private global::System.Int32 _DateHourDetail_Id;
        partial void OnDateHourDetail_IdChanging(global::System.Int32 value);
        partial void OnDateHourDetail_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Area_Id
        {
            get
            {
                return _Area_Id;
            }
            set
            {
                OnArea_IdChanging(value);
                ReportPropertyChanging("Area_Id");
                _Area_Id = StructuralObject.SetValidValue(value, "Area_Id");
                ReportPropertyChanged("Area_Id");
                OnArea_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Area_Id;
        partial void OnArea_IdChanging(Nullable<global::System.Int32> value);
        partial void OnArea_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Work_Id
        {
            get
            {
                return _Work_Id;
            }
            set
            {
                OnWork_IdChanging(value);
                ReportPropertyChanging("Work_Id");
                _Work_Id = StructuralObject.SetValidValue(value, "Work_Id");
                ReportPropertyChanged("Work_Id");
                OnWork_IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Work_Id;
        partial void OnWork_IdChanging(Nullable<global::System.Int32> value);
        partial void OnWork_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year_Id
        {
            get
            {
                return _Year_Id;
            }
            set
            {
                OnYear_IdChanging(value);
                ReportPropertyChanging("Year_Id");
                _Year_Id = StructuralObject.SetValidValue(value, "Year_Id");
                ReportPropertyChanged("Year_Id");
                OnYear_IdChanged();
            }
        }
        private global::System.Int32 _Year_Id;
        partial void OnYear_IdChanging(global::System.Int32 value);
        partial void OnYear_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month_Id
        {
            get
            {
                return _Month_Id;
            }
            set
            {
                OnMonth_IdChanging(value);
                ReportPropertyChanging("Month_Id");
                _Month_Id = StructuralObject.SetValidValue(value, "Month_Id");
                ReportPropertyChanged("Month_Id");
                OnMonth_IdChanged();
            }
        }
        private global::System.Int32 _Month_Id;
        partial void OnMonth_IdChanging(global::System.Int32 value);
        partial void OnMonth_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasPayedByDental
        {
            get
            {
                return _WasPayedByDental;
            }
            set
            {
                OnWasPayedByDentalChanging(value);
                ReportPropertyChanging("WasPayedByDental");
                _WasPayedByDental = StructuralObject.SetValidValue(value, "WasPayedByDental");
                ReportPropertyChanged("WasPayedByDental");
                OnWasPayedByDentalChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasPayedByDental;
        partial void OnWasPayedByDentalChanging(Nullable<global::System.Boolean> value);
        partial void OnWasPayedByDentalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TechnicianId
        {
            get
            {
                return _TechnicianId;
            }
            set
            {
                OnTechnicianIdChanging(value);
                ReportPropertyChanging("TechnicianId");
                _TechnicianId = StructuralObject.SetValidValue(value, "TechnicianId");
                ReportPropertyChanged("TechnicianId");
                OnTechnicianIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TechnicianId;
        partial void OnTechnicianIdChanging(Nullable<global::System.Int32> value);
        partial void OnTechnicianIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MaterialCost
        {
            get
            {
                return _MaterialCost;
            }
            set
            {
                OnMaterialCostChanging(value);
                ReportPropertyChanging("MaterialCost");
                _MaterialCost = StructuralObject.SetValidValue(value, "MaterialCost");
                ReportPropertyChanged("MaterialCost");
                OnMaterialCostChanged();
            }
        }
        private Nullable<global::System.Double> _MaterialCost;
        partial void OnMaterialCostChanging(Nullable<global::System.Double> value);
        partial void OnMaterialCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_AreaIntervention", "Area")]
        public Area Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("dsaModel.FK_AreaIntervention", "Area").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("dsaModel.FK_AreaIntervention", "Area").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Area> AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("dsaModel.FK_AreaIntervention", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Area>("dsaModel.FK_AreaIntervention", "Area", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_InterventionDateHourDetails", "DateHourDetail")]
        public DateHourDetail DateHourDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateHourDetail>("dsaModel.FK_InterventionDateHourDetails", "DateHourDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateHourDetail>("dsaModel.FK_InterventionDateHourDetails", "DateHourDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DateHourDetail> DateHourDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DateHourDetail>("dsaModel.FK_InterventionDateHourDetails", "DateHourDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DateHourDetail>("dsaModel.FK_InterventionDateHourDetails", "DateHourDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_InterventionLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("dsaModel.FK_InterventionLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("dsaModel.FK_InterventionLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("dsaModel.FK_InterventionLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("dsaModel.FK_InterventionLocation", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_InterventionWork", "Work")]
        public Work Work
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Work>("dsaModel.FK_InterventionWork", "Work").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Work>("dsaModel.FK_InterventionWork", "Work").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Work> WorkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Work>("dsaModel.FK_InterventionWork", "Work");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Work>("dsaModel.FK_InterventionWork", "Work", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_MaterialIntervention", "Material")]
        public Material Material
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("dsaModel.FK_MaterialIntervention", "Material").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("dsaModel.FK_MaterialIntervention", "Material").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Material> MaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("dsaModel.FK_MaterialIntervention", "Material");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Material>("dsaModel.FK_MaterialIntervention", "Material", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_MonthIntervention", "Month")]
        public Month Month
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("dsaModel.FK_MonthIntervention", "Month").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("dsaModel.FK_MonthIntervention", "Month").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Month> MonthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Month>("dsaModel.FK_MonthIntervention", "Month");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Month>("dsaModel.FK_MonthIntervention", "Month", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_PatientIntervention", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("dsaModel.FK_PatientIntervention", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("dsaModel.FK_PatientIntervention", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("dsaModel.FK_PatientIntervention", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("dsaModel.FK_PatientIntervention", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_YearIntervention", "Year")]
        public Year Year
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("dsaModel.FK_YearIntervention", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("dsaModel.FK_YearIntervention", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> YearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("dsaModel.FK_YearIntervention", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("dsaModel.FK_YearIntervention", "Year", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "TypeIntervention", "Type")]
        public Type Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("dsaModel.TypeIntervention", "Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("dsaModel.TypeIntervention", "Type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Type> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("dsaModel.TypeIntervention", "Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Type>("dsaModel.TypeIntervention", "Type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "WorkTypeIntervention", "WorkType")]
        public WorkType WorkType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("dsaModel.WorkTypeIntervention", "WorkType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("dsaModel.WorkTypeIntervention", "WorkType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkType> WorkTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkType>("dsaModel.WorkTypeIntervention", "WorkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkType>("dsaModel.WorkTypeIntervention", "WorkType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "TechnicianIntervention", "Technician")]
        public Technician Technician
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Technician>("dsaModel.TechnicianIntervention", "Technician").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Technician>("dsaModel.TechnicianIntervention", "Technician").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Technician> TechnicianReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Technician>("dsaModel.TechnicianIntervention", "Technician");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Technician>("dsaModel.TechnicianIntervention", "Technician", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "UserIntervention", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("dsaModel.UserIntervention", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("dsaModel.UserIntervention", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("dsaModel.UserIntervention", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("dsaModel.UserIntervention", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Location CreateLocation(global::System.Int32 id, global::System.String name)
        {
            Location location = new Location();
            location.Id = id;
            location.Name = name;
            return location;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasDeleted
        {
            get
            {
                return _WasDeleted;
            }
            set
            {
                OnWasDeletedChanging(value);
                ReportPropertyChanging("WasDeleted");
                _WasDeleted = StructuralObject.SetValidValue(value, "WasDeleted");
                ReportPropertyChanged("WasDeleted");
                OnWasDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasDeleted;
        partial void OnWasDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnWasDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_InterventionLocation", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.FK_InterventionLocation", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.FK_InterventionLocation", "Intervention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="MAC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MAC : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MAC object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static MAC CreateMAC(global::System.Int32 id)
        {
            MAC mAC = new MAC();
            mAC.Id = id;
            return mAC;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String macId
        {
            get
            {
                return _macId;
            }
            set
            {
                OnmacIdChanging(value);
                ReportPropertyChanging("macId");
                _macId = StructuralObject.SetValidValue(value, true, "macId");
                ReportPropertyChanged("macId");
                OnmacIdChanged();
            }
        }
        private global::System.String _macId;
        partial void OnmacIdChanging(global::System.String value);
        partial void OnmacIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "UserMAC", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("dsaModel.UserMAC", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("dsaModel.UserMAC", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("dsaModel.UserMAC", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("dsaModel.UserMAC", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Material")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Material : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Material object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static Material CreateMaterial(global::System.Int32 id, global::System.String name, global::System.Double cost)
        {
            Material material = new Material();
            material.Id = id;
            material.Name = name;
            material.Cost = cost;
            return material;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Double _Cost;
        partial void OnCostChanging(global::System.Double value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasDeleted
        {
            get
            {
                return _WasDeleted;
            }
            set
            {
                OnWasDeletedChanging(value);
                ReportPropertyChanging("WasDeleted");
                _WasDeleted = StructuralObject.SetValidValue(value, "WasDeleted");
                ReportPropertyChanged("WasDeleted");
                OnWasDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasDeleted;
        partial void OnWasDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnWasDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_MaterialIntervention", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.FK_MaterialIntervention", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.FK_MaterialIntervention", "Intervention", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "MaterialType", "Type")]
        public EntityCollection<Type> Types
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Type>("dsaModel.MaterialType", "Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Type>("dsaModel.MaterialType", "Type", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Month")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Month : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Month object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="mOnthNumber">Initial value of the MOnthNumber property.</param>
        public static Month CreateMonth(global::System.Int32 id, global::System.Int32 mOnthNumber)
        {
            Month month = new Month();
            month.Id = id;
            month.MOnthNumber = mOnthNumber;
            return month;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MOnthNumber
        {
            get
            {
                return _MOnthNumber;
            }
            set
            {
                OnMOnthNumberChanging(value);
                ReportPropertyChanging("MOnthNumber");
                _MOnthNumber = StructuralObject.SetValidValue(value, "MOnthNumber");
                ReportPropertyChanged("MOnthNumber");
                OnMOnthNumberChanged();
            }
        }
        private global::System.Int32 _MOnthNumber;
        partial void OnMOnthNumberChanging(global::System.Int32 value);
        partial void OnMOnthNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_MonthIntervention", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.FK_MonthIntervention", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.FK_MonthIntervention", "Intervention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Patient CreatePatient(global::System.Int32 id, global::System.Int32 userId)
        {
            Patient patient = new Patient();
            patient.id = id;
            patient.UserId = userId;
            return patient;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String surname
        {
            get
            {
                return _surname;
            }
            set
            {
                OnsurnameChanging(value);
                ReportPropertyChanging("surname");
                _surname = StructuralObject.SetValidValue(value, true, "surname");
                ReportPropertyChanged("surname");
                OnsurnameChanged();
            }
        }
        private global::System.String _surname;
        partial void OnsurnameChanging(global::System.String value);
        partial void OnsurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true, "Street");
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Block
        {
            get
            {
                return _Block;
            }
            set
            {
                OnBlockChanging(value);
                ReportPropertyChanging("Block");
                _Block = StructuralObject.SetValidValue(value, true, "Block");
                ReportPropertyChanged("Block");
                OnBlockChanged();
            }
        }
        private global::System.String _Block;
        partial void OnBlockChanging(global::System.String value);
        partial void OnBlockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Job
        {
            get
            {
                return _Job;
            }
            set
            {
                OnJobChanging(value);
                ReportPropertyChanging("Job");
                _Job = StructuralObject.SetValidValue(value, true, "Job");
                ReportPropertyChanged("Job");
                OnJobChanged();
            }
        }
        private global::System.String _Job;
        partial void OnJobChanging(global::System.String value);
        partial void OnJobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetNumber
        {
            get
            {
                return _StreetNumber;
            }
            set
            {
                OnStreetNumberChanging(value);
                ReportPropertyChanging("StreetNumber");
                _StreetNumber = StructuralObject.SetValidValue(value, true, "StreetNumber");
                ReportPropertyChanged("StreetNumber");
                OnStreetNumberChanged();
            }
        }
        private global::System.String _StreetNumber;
        partial void OnStreetNumberChanging(global::System.String value);
        partial void OnStreetNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ocupation
        {
            get
            {
                return _Ocupation;
            }
            set
            {
                OnOcupationChanging(value);
                ReportPropertyChanging("Ocupation");
                _Ocupation = StructuralObject.SetValidValue(value, true, "Ocupation");
                ReportPropertyChanged("Ocupation");
                OnOcupationChanged();
            }
        }
        private global::System.String _Ocupation;
        partial void OnOcupationChanging(global::System.String value);
        partial void OnOcupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_PatientIntervention", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.FK_PatientIntervention", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.FK_PatientIntervention", "Intervention", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "UserPatient", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("dsaModel.UserPatient", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("dsaModel.UserPatient", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("dsaModel.UserPatient", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("dsaModel.UserPatient", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="ProgramInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProgramInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProgramInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="exportFileName">Initial value of the ExportFileName property.</param>
        /// <param name="lastFileDateImport">Initial value of the LastFileDateImport property.</param>
        /// <param name="lastAddedInterventionDate">Initial value of the LastAddedInterventionDate property.</param>
        public static ProgramInfo CreateProgramInfo(global::System.Int32 id, global::System.String exportFileName, global::System.DateTime lastFileDateImport, global::System.DateTime lastAddedInterventionDate)
        {
            ProgramInfo programInfo = new ProgramInfo();
            programInfo.Id = id;
            programInfo.ExportFileName = exportFileName;
            programInfo.LastFileDateImport = lastFileDateImport;
            programInfo.LastAddedInterventionDate = lastAddedInterventionDate;
            return programInfo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExportFileName
        {
            get
            {
                return _ExportFileName;
            }
            set
            {
                OnExportFileNameChanging(value);
                ReportPropertyChanging("ExportFileName");
                _ExportFileName = StructuralObject.SetValidValue(value, false, "ExportFileName");
                ReportPropertyChanged("ExportFileName");
                OnExportFileNameChanged();
            }
        }
        private global::System.String _ExportFileName;
        partial void OnExportFileNameChanging(global::System.String value);
        partial void OnExportFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastFileDateImport
        {
            get
            {
                return _LastFileDateImport;
            }
            set
            {
                OnLastFileDateImportChanging(value);
                ReportPropertyChanging("LastFileDateImport");
                _LastFileDateImport = StructuralObject.SetValidValue(value, "LastFileDateImport");
                ReportPropertyChanged("LastFileDateImport");
                OnLastFileDateImportChanged();
            }
        }
        private global::System.DateTime _LastFileDateImport;
        partial void OnLastFileDateImportChanging(global::System.DateTime value);
        partial void OnLastFileDateImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastAddedInterventionDate
        {
            get
            {
                return _LastAddedInterventionDate;
            }
            set
            {
                OnLastAddedInterventionDateChanging(value);
                ReportPropertyChanging("LastAddedInterventionDate");
                _LastAddedInterventionDate = StructuralObject.SetValidValue(value, "LastAddedInterventionDate");
                ReportPropertyChanged("LastAddedInterventionDate");
                OnLastAddedInterventionDateChanged();
            }
        }
        private global::System.DateTime _LastAddedInterventionDate;
        partial void OnLastAddedInterventionDateChanging(global::System.DateTime value);
        partial void OnLastAddedInterventionDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Technician")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Technician : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Technician object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Technician CreateTechnician(global::System.Int32 id, global::System.String name)
        {
            Technician technician = new Technician();
            technician.Id = id;
            technician.Name = name;
            return technician;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasDeleted
        {
            get
            {
                return _WasDeleted;
            }
            set
            {
                OnWasDeletedChanging(value);
                ReportPropertyChanging("WasDeleted");
                _WasDeleted = StructuralObject.SetValidValue(value, "WasDeleted");
                ReportPropertyChanged("WasDeleted");
                OnWasDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasDeleted;
        partial void OnWasDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnWasDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "TechnicianIntervention", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.TechnicianIntervention", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.TechnicianIntervention", "Intervention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Type object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Type CreateType(global::System.Int32 id, global::System.Double cost, global::System.String name)
        {
            Type type = new Type();
            type.Id = id;
            type.Cost = cost;
            type.Name = name;
            return type;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Double _Cost;
        partial void OnCostChanging(global::System.Double value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "MaterialType", "Material")]
        public Material Material
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("dsaModel.MaterialType", "Material").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("dsaModel.MaterialType", "Material").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Material> MaterialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material>("dsaModel.MaterialType", "Material");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Material>("dsaModel.MaterialType", "Material", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "TypeIntervention", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.TypeIntervention", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.TypeIntervention", "Intervention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static User CreateUser(global::System.Int32 id)
        {
            User user = new User();
            user.Id = id;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true, "username");
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true, "password");
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String appInfo
        {
            get
            {
                return _appInfo;
            }
            set
            {
                OnappInfoChanging(value);
                ReportPropertyChanging("appInfo");
                _appInfo = StructuralObject.SetValidValue(value, true, "appInfo");
                ReportPropertyChanged("appInfo");
                OnappInfoChanged();
            }
        }
        private global::System.String _appInfo;
        partial void OnappInfoChanging(global::System.String value);
        partial void OnappInfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "UserMAC", "MAC")]
        public EntityCollection<MAC> MACs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MAC>("dsaModel.UserMAC", "MAC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MAC>("dsaModel.UserMAC", "MAC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "UserPatient", "Patient")]
        public EntityCollection<Patient> Patients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("dsaModel.UserPatient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("dsaModel.UserPatient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "UserIntervention", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.UserIntervention", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.UserIntervention", "Intervention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Work")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Work : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Work object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        public static Work CreateWork(global::System.Int32 id, global::System.String name, global::System.Double cost)
        {
            Work work = new Work();
            work.Id = id;
            work.Name = name;
            work.Cost = cost;
            return work;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Double _Cost;
        partial void OnCostChanging(global::System.Double value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Percent
        {
            get
            {
                return _Percent;
            }
            set
            {
                OnPercentChanging(value);
                ReportPropertyChanging("Percent");
                _Percent = StructuralObject.SetValidValue(value, "Percent");
                ReportPropertyChanged("Percent");
                OnPercentChanged();
            }
        }
        private Nullable<global::System.Double> _Percent;
        partial void OnPercentChanging(Nullable<global::System.Double> value);
        partial void OnPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IncludedINFinancial
        {
            get
            {
                return _IncludedINFinancial;
            }
            set
            {
                OnIncludedINFinancialChanging(value);
                ReportPropertyChanging("IncludedINFinancial");
                _IncludedINFinancial = StructuralObject.SetValidValue(value, "IncludedINFinancial");
                ReportPropertyChanged("IncludedINFinancial");
                OnIncludedINFinancialChanged();
            }
        }
        private Nullable<global::System.Boolean> _IncludedINFinancial;
        partial void OnIncludedINFinancialChanging(Nullable<global::System.Boolean> value);
        partial void OnIncludedINFinancialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> WasDeleted
        {
            get
            {
                return _WasDeleted;
            }
            set
            {
                OnWasDeletedChanging(value);
                ReportPropertyChanging("WasDeleted");
                _WasDeleted = StructuralObject.SetValidValue(value, "WasDeleted");
                ReportPropertyChanged("WasDeleted");
                OnWasDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _WasDeleted;
        partial void OnWasDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnWasDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_InterventionWork", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.FK_InterventionWork", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.FK_InterventionWork", "Intervention", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "WorkWorkType", "WorkType")]
        public EntityCollection<WorkType> WorkTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkType>("dsaModel.WorkWorkType", "WorkType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkType>("dsaModel.WorkWorkType", "WorkType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="WorkType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="percent">Initial value of the Percent property.</param>
        public static WorkType CreateWorkType(global::System.Int32 id, global::System.String name, global::System.Double cost, global::System.Double percent)
        {
            WorkType workType = new WorkType();
            workType.Id = id;
            workType.Name = name;
            workType.Cost = cost;
            workType.Percent = percent;
            return workType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value, "Cost");
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Double _Cost;
        partial void OnCostChanging(global::System.Double value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Percent
        {
            get
            {
                return _Percent;
            }
            set
            {
                OnPercentChanging(value);
                ReportPropertyChanging("Percent");
                _Percent = StructuralObject.SetValidValue(value, "Percent");
                ReportPropertyChanged("Percent");
                OnPercentChanged();
            }
        }
        private global::System.Double _Percent;
        partial void OnPercentChanging(global::System.Double value);
        partial void OnPercentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "WorkWorkType", "Work")]
        public Work Work
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Work>("dsaModel.WorkWorkType", "Work").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Work>("dsaModel.WorkWorkType", "Work").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Work> WorkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Work>("dsaModel.WorkWorkType", "Work");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Work>("dsaModel.WorkWorkType", "Work", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "WorkTypeIntervention", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.WorkTypeIntervention", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.WorkTypeIntervention", "Intervention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dsaModel", Name="Year")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Year : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Year object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="yearNb">Initial value of the YearNb property.</param>
        public static Year CreateYear(global::System.Int32 id, global::System.Int32 yearNb)
        {
            Year year = new Year();
            year.Id = id;
            year.YearNb = yearNb;
            return year;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearNb
        {
            get
            {
                return _YearNb;
            }
            set
            {
                OnYearNbChanging(value);
                ReportPropertyChanging("YearNb");
                _YearNb = StructuralObject.SetValidValue(value, "YearNb");
                ReportPropertyChanged("YearNb");
                OnYearNbChanged();
            }
        }
        private global::System.Int32 _YearNb;
        partial void OnYearNbChanging(global::System.Int32 value);
        partial void OnYearNbChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dsaModel", "FK_YearIntervention", "Intervention")]
        public EntityCollection<Intervention> Interventions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Intervention>("dsaModel.FK_YearIntervention", "Intervention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Intervention>("dsaModel.FK_YearIntervention", "Intervention", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
